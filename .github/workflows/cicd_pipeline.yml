name: "DEV CI/CD Pipeline"

on:
  push:
    branches:
      - dev
  workflow_dispatch:
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        poetry-version: ["1.2.2"]
        node-version: [16]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Resolve frontend
        run: sh resolve_frontend.sh alpha $FRONTEND_VERSION $FRONTEND_ASSET_URL
        env:
          FRONTEND_VERSION: ${{ inputs.version }}
          FRONTEND_ASSET_URL: ${{ inputs.assets_url }}
          CURRENT_BRANCH: ${{ github.head_ref || github.ref_name }} 
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --without dev
      - name: Run tests
        run: poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./coverage.xml
          verbose: true
      - name: Manage version
        env:
          PROVIDED_VERSION: 0.5.${{ github.run_number }}
        run: |
          sed -i "s/^version[ ]*=.*/version = '${PROVIDED_VERSION}'/" pyproject.toml
      - name: Publish
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          poetry config pypi-token.testpypi $TEST_PYPI_TOKEN
          poetry publish --build --skip-existing -r testpypi
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: https://docker.shlab.tech
          username: ${{ secrets.ALI_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ALI_DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.shlab.tech/public/labelu:0.5.${{ github.run_number }}-dev
