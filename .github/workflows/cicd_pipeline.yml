name: "CI/CD Pipeline"

on:
  push:
    branches:
      - main
      
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        poetry-version: ["1.2.2"]
        node-version: [14]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build frontend
        run: |
          npm ci --prefix=./frontend
          npm install --prefix=./frontend
          npm run build --prefix=./frontend --if-present
          mv frontend/dist/* labelu/internal/statics
      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --without dev
      - name: Run tests
        run: poetry run pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
          with:
            token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
            files: ./coverage.xml
            verbose: true
      - name: Manage version
        env:
          PROVIDED_VERSION: 0.1.${{ github.run_number }}
        run: |
          sed -i "s/^version[ ]*=.*/version = '${PROVIDED_VERSION}'/" pyproject.toml
      - name: Publish
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          poetry config pypi-token.testpypi $TEST_PYPI_TOKEN
          poetry publish --build -r testpypi
